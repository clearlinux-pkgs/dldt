From 8a9a76ee0db8bf4508021ec541f93cfbb2e50d4d Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Mon, 28 Jan 2019 13:37:59 -0800
Subject: [PATCH 01/14] Build fixes.

---
 inference-engine/CMakeLists.txt                      | 10 +++++++++-
 inference-engine/cmake/config.cmake.in               | 12 ++++++++++--
 inference-engine/cmake/linux_name.cmake              |  2 +-
 inference-engine/cmake/os_flags.cmake                |  2 +-
 inference-engine/ie_bridges/python/CMakeLists.txt    |  4 +++-
 inference-engine/samples/CMakeLists.txt              |  1 -
 inference-engine/src/extension/CMakeLists.txt        |  1 +
 inference-engine/src/inference_engine/CMakeLists.txt | 11 +++++++++--
 .../thirdparty/mkl-dnn/cmake/platform.cmake          |  3 +--
 9 files changed, 35 insertions(+), 11 deletions(-)

diff --git a/inference-engine/CMakeLists.txt b/inference-engine/CMakeLists.txt
index 9e639ff..d65c86a 100644
--- a/inference-engine/CMakeLists.txt
+++ b/inference-engine/CMakeLists.txt
@@ -141,7 +141,15 @@ include(cpplint)
 add_subdirectory(src)
 add_subdirectory(tests)
 add_subdirectory(thirdparty)
-set(InferenceEngine_DIR "${CMAKE_BINARY_DIR}")
+
+option(ENABLE_PYTHON_BINDINGS "Build python bindings." OFF)
+if (ENABLE_PYTHON_BINDINGS)
+    set(InferenceEngine_DIR "${CMAKE_BINARY_DIR}")
+
+    #to be able to link
+    set (LIB_FOLDER ${IE_MAIN_SOURCE_DIR}/${BIN_FOLDER}/${CMAKE_BUILD_TYPE}/lib)
+    add_subdirectory(ie_bridges/python)
+endif()
 
 #to be able to link
 set (LIB_FOLDER ${IE_MAIN_SOURCE_DIR}/${BIN_FOLDER}/${IE_BUILD_CONFIGURATION}/lib)
diff --git a/inference-engine/cmake/config.cmake.in b/inference-engine/cmake/config.cmake.in
index 7c3459f..b32d288 100644
--- a/inference-engine/cmake/config.cmake.in
+++ b/inference-engine/cmake/config.cmake.in
@@ -5,9 +5,17 @@
 
 if(DEFINED IE_MAIN_SOURCE_DIR AND TARGET inference_engine)
     set(InferenceEngine_INCLUDE_DIRS ${IE_MAIN_SOURCE_DIR}/include)
-    set(InferenceEngine_LIBRARIES inference_engine)
+    if(NOT(UNIX))
+        set(InferenceEngine_LIBRARIES IE::inference_engine)
+    else()
+        set(InferenceEngine_LIBRARIES inference_engine)
+    endif()
 else()
     include("${CMAKE_CURRENT_LIST_DIR}/targets.cmake")
     get_target_property(InferenceEngine_INCLUDE_DIRS IE::inference_engine INTERFACE_INCLUDE_DIRECTORIES)
-    set(InferenceEngine_LIBRARIES IE::inference_engine)
+    if(NOT(UNIX))
+        set(InferenceEngine_LIBRARIES IE::inference_engine)
+    else()
+        set(InferenceEngine_LIBRARIES inference_engine)
+    endif()
 endif()
diff --git a/inference-engine/cmake/linux_name.cmake b/inference-engine/cmake/linux_name.cmake
index 8b07919..87dbf7b 100644
--- a/inference-engine/cmake/linux_name.cmake
+++ b/inference-engine/cmake/linux_name.cmake
@@ -6,7 +6,7 @@
 if (UNIX)
     function(get_linux_name res_var)
         if (NOT EXISTS "/etc/lsb-release")
-            execute_process(COMMAND find -L /etc/ -maxdepth 1 -type f -name *-release -exec cat {} \;
+            execute_process(COMMAND find /usr/lib/ /etc/ -maxdepth 1 -type f -name *-release -exec cat {} \;
                     OUTPUT_VARIABLE release_data RESULT_VARIABLE result)
             set(name_regex "NAME=\"([^ \"\n]*).*\"\n")
             set(version_regex "VERSION=\"([0-9]+(\\.[0-9]+)?)[^\n]*\"")
diff --git a/inference-engine/cmake/os_flags.cmake b/inference-engine/cmake/os_flags.cmake
index 29608ea..dd396bb 100644
--- a/inference-engine/cmake/os_flags.cmake
+++ b/inference-engine/cmake/os_flags.cmake
@@ -28,7 +28,7 @@ if (WIN32)
     endif()
 
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Werror=return-type ")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Werror=return-type ")
     if (APPLE)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=unused-command-line-argument")
     elseif(UNIX)
diff --git a/inference-engine/ie_bridges/python/CMakeLists.txt b/inference-engine/ie_bridges/python/CMakeLists.txt
index 6176ccc..8155753 100644
--- a/inference-engine/ie_bridges/python/CMakeLists.txt
+++ b/inference-engine/ie_bridges/python/CMakeLists.txt
@@ -49,5 +49,7 @@ endif()
 
 find_package (InferenceEngine REQUIRED)
 
+link_directories(${LIB_FOLDER})
+
 set (PYTHON_BRIDGE_SRC_ROOT ${CMAKE_CURRENT_SOURCE_DIR})
-add_subdirectory (src/openvino/inference_engine)
\ No newline at end of file
+add_subdirectory (src/openvino/inference_engine)
diff --git a/inference-engine/samples/CMakeLists.txt b/inference-engine/samples/CMakeLists.txt
index da00b43..88368ac 100644
--- a/inference-engine/samples/CMakeLists.txt
+++ b/inference-engine/samples/CMakeLists.txt
@@ -63,7 +63,6 @@ if (WIN32)
         set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4251 /wd4275 /wd4267") #disable some warnings
     endif()
 else()
-    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror") #treating warnings as errors
     if (APPLE)
         set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=unused-command-line-argument")
     elseif(UNIX)
diff --git a/inference-engine/src/extension/CMakeLists.txt b/inference-engine/src/extension/CMakeLists.txt
index b0078e2..cf3b451 100644
--- a/inference-engine/src/extension/CMakeLists.txt
+++ b/inference-engine/src/extension/CMakeLists.txt
@@ -28,6 +28,7 @@ endif()
 if (${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
 endif()
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp ")
 
 file(GLOB_RECURSE SRC *.cpp)
 file(GLOB_RECURSE HDR *.hpp)
diff --git a/inference-engine/src/inference_engine/CMakeLists.txt b/inference-engine/src/inference_engine/CMakeLists.txt
index b3dc75f..8c18f0b 100644
--- a/inference-engine/src/inference_engine/CMakeLists.txt
+++ b/inference-engine/src/inference_engine/CMakeLists.txt
@@ -88,7 +88,7 @@ if(ENABLE_MKL_DNN)
     target_include_directories(${TARGET_NAME} SYSTEM PRIVATE "${IE_MAIN_SOURCE_DIR}/thirdparty/mkl-dnn/src/cpu/xbyak")
 endif()
 
-set_target_properties(${TARGET_NAME} PROPERTIES COMPILE_PDB_NAME ${TARGET_NAME})
+set_target_properties(${TARGET_NAME} PROPERTIES COMPILE_PDB_NAME ${TARGET_NAME} SOVERSION 1)
 
 # Static library used for unit tests which are always built
 
@@ -112,7 +112,7 @@ endif()
 
 target_compile_definitions(${TARGET_NAME}_s PUBLIC -DUSE_STATIC_IE)
 
-set_target_properties(${TARGET_NAME}_s PROPERTIES COMPILE_PDB_NAME ${TARGET_NAME}_s)
+set_target_properties(${TARGET_NAME}_s PROPERTIES COMPILE_PDB_NAME ${TARGET_NAME}_s SOVERSION 1)
 
 target_link_libraries(${TARGET_NAME}_s PRIVATE fluid
                                        PRIVATE ade
@@ -132,3 +132,10 @@ configure_file(
     COPYONLY)
 
 add_cpplint_target(${TARGET_NAME}_cpplint FOR_TARGETS ${TARGET_NAME})
+
+install(TARGETS ${TARGET_NAME} LIBRARY DESTINATION lib64)
+install(FILES ${PUBLIC_HEADERS} DESTINATION include/${TARGET_NAME})
+install(FILES
+    "${CMAKE_BINARY_DIR}/InferenceEngineConfig.cmake"
+    "${CMAKE_BINARY_DIR}/InferenceEngineConfig-version.cmake"
+    DESTINATION ${CMAKE_INSTALL_PREFIX}/share/cmake/Modules)
diff --git a/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake b/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake
index a541215..de9cef9 100644
--- a/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake
+++ b/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake
@@ -63,10 +63,9 @@ if(MSVC)
     endif()
 elseif(UNIX OR MINGW)
     append(CMAKE_CCXX_FLAGS "-Wall -Wno-unknown-pragmas")
-    append_if_product(CMAKE_CCXX_FLAGS "-Werror")
     append(CMAKE_CCXX_FLAGS "-fvisibility=internal")
     append(CMAKE_C_FLAGS "-std=c99")
-    append(CMAKE_CXX_FLAGS "-std=c++11 -fvisibility-inlines-hidden")
+    append(CMAKE_CXX_FLAGS "-std=gnu++11 -fvisibility-inlines-hidden")
     # compiler specific settings
     if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
         # Clang cannot vectorize some loops with #pragma omp simd and gets
-- 
2.21.0

