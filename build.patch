--- dldt-2018_R3/inference-engine/cmake/linux_name.cmake~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/cmake/linux_name.cmake	2018-10-23 20:51:59.198701162 +0000
@@ -8,7 +8,7 @@
 if (UNIX)
     function(get_linux_name res_var)
         if (NOT EXISTS "/etc/lsb-release")
-            execute_process(COMMAND find /etc/ -maxdepth 1 -type f -name *-release -exec cat {} \;
+            execute_process(COMMAND find /usr/lib/ -maxdepth 1 -type f -name *-release -exec cat {} \;
                     OUTPUT_VARIABLE release_data RESULT_VARIABLE result)
             set(name_regex "NAME=\"([^ \"\n]*).*\"\n")
             set(version_regex "VERSION=\"([0-9]+(\\.[0-9]+)?)[^\n]*\"")
--- dldt-2018_R3/inference-engine/cmake/share/InferenceEngineConfig.cmake~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/cmake/share/InferenceEngineConfig.cmake	2018-10-23 20:52:19.824700875 +0000
@@ -57,7 +57,7 @@
             set(_OS_PATH "")
         else()
            if (NOT EXISTS "/etc/lsb-release")
-                execute_process(COMMAND find /etc/ -maxdepth 1 -type f -name *-release -exec cat {} \;
+                execute_process(COMMAND find /usr/lib/ -maxdepth 1 -type f -name *-release -exec cat {} \;
                             OUTPUT_VARIABLE release_data RESULT_VARIABLE result)
                 set(name_regex "NAME=\"([^ \"\n]*).*\"\n")
                 set(version_regex "VERSION=\"([0-9]+(\\.[0-9]+)?)[^\n]*\"")
--- dldt-2018_R3/inference-engine/cmake/os_flags.cmake~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/cmake/os_flags.cmake	2018-10-23 20:54:41.327698905 +0000
@@ -9,7 +9,7 @@
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHsc") #no asynchronous structured exception handling
 	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LARGEADDRESSAWARE")
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Werror=return-type ")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Werror=return-type ")
     if (APPLE)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=unused-command-line-argument")
     elseif(UNIX)
--- dldt-2018_R3/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake	2018-10-23 20:58:02.012696111 +0000
@@ -53,7 +53,7 @@
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Qdiag-disable:15552")
     endif()
 elseif(UNIX OR APPLE OR MINGW)
-    set(CMAKE_CCXX_FLAGS "${CMAKE_CCXX_FLAGS} -Wall -Werror -Wno-unknown-pragmas")
+    set(CMAKE_CCXX_FLAGS "${CMAKE_CCXX_FLAGS} -Wall -Wno-unknown-pragmas")
     set(CMAKE_CCXX_FLAGS "${CMAKE_CCXX_FLAGS} -fvisibility=internal")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fvisibility-inlines-hidden")
--- dldt-2018_R3/inference-engine/samples/CMakeLists.txt~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/samples/CMakeLists.txt	2018-10-23 21:00:26.198694103 +0000
@@ -73,7 +73,7 @@
         endif()
     endif()
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Werror=return-type ")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=return-type ")
     if (APPLE)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=unused-command-line-argument")
     elseif(UNIX)
--- dldt-2018_R3/inference-engine/src/extension/CMakeLists.txt~	2018-10-16 11:00:32.000000000 +0000
+++ dldt-2018_R3/inference-engine/src/extension/CMakeLists.txt	2018-10-23 21:10:25.536685759 +0000
@@ -9,6 +9,7 @@
 if(WIN32)
     add_definitions(-DIMPLEMENT_INFERENCE_ENGINE_API)
 endif()
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp ")
 
 include_directories (PRIVATE
         ${CMAKE_CURRENT_SOURCE_DIR}/common
--- dldt-2018_R3/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake~	2018-10-23 20:58:02.000000000 +0000
+++ dldt-2018_R3/inference-engine/thirdparty/mkl-dnn/cmake/platform.cmake	2018-10-23 21:15:47.450681277 +0000
@@ -56,7 +56,7 @@
     set(CMAKE_CCXX_FLAGS "${CMAKE_CCXX_FLAGS} -Wall -Wno-unknown-pragmas")
     set(CMAKE_CCXX_FLAGS "${CMAKE_CCXX_FLAGS} -fvisibility=internal")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fvisibility-inlines-hidden")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -fvisibility-inlines-hidden")
     # compiler specific settings
     if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
         # Clang cannot vectorize some loops with #pragma omp simd and gets
