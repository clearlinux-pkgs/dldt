#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : dldt
Version  : 2018.r5
Release  : 50
URL      : https://github.com/opencv/dldt/archive/2018_R5.tar.gz
Source0  : https://github.com/opencv/dldt/archive/2018_R5.tar.gz
Summary  : @PACKAGE_DESCRIPTION@
Group    : Development/Tools
License  : Apache-2.0 BSD-3-Clause MIT
Requires: dldt-bin = %{version}-%{release}
Requires: dldt-lib = %{version}-%{release}
Requires: dldt-license = %{version}-%{release}
Requires: intel-compute-runtime
Requires: mxnet
Requires: networkx
Requires: numpy
Requires: onnx
Requires: opencv-python
Requires: protobuf
Requires: pugixml
Requires: tensorflow
BuildRequires : Cython
BuildRequires : ade-dev
BuildRequires : boost-dev
BuildRequires : buildreq-cmake
BuildRequires : buildreq-distutils3
BuildRequires : cmake
BuildRequires : doxygen
BuildRequires : gflags-dev
BuildRequires : glibc-dev
BuildRequires : glibc-staticdev
BuildRequires : googletest
BuildRequires : googletest-dev
BuildRequires : llvm
BuildRequires : llvm-dev
BuildRequires : mkl-dnn-dev
BuildRequires : ocl-icd-dev
BuildRequires : openblas
BuildRequires : opencv
BuildRequires : opencv-dev
BuildRequires : opencv-python
BuildRequires : pugixml-dev
BuildRequires : python3
Patch1: 0001-Build-fixes.patch
Patch2: 0002-Add-fopenmp.patch
Patch3: 0003-Fixups-for-cmake-library-configuration.patch
Patch4: 0004-Fix-install-of-public-headers-within-subdirectories.patch
Patch5: 0005-Don-t-override-cmake-paths.patch
Patch6: 0006-Install-sample-apps.patch
Patch7: 0007-Statically-link-common-sample-app-lib.patch
Patch8: 0008-Don-t-override-cmake-paths-for-samples.patch
Patch9: 0009-Include-OpenCV-legacy-constants.patch
Patch10: 0010-Don-t-look-for-ade-in-a-subdir.patch
Patch11: 0011-Remove-Werror.patch
Patch12: 0012-Add-fopenmp-to-mkldnn_plugin.patch
Patch13: 0001-Werror-is-evil.patch
Patch14: 0001-use-GNUInstallDirs-on-nix.patch
Patch15: 0001-do-not-put-binaries-in-src-dir.patch

%description
# [OpenVINOâ¢ Toolkit](https://01.org/openvinotoolkit) - Deep Learning Deployment Toolkit repository
[![Stable release](https://img.shields.io/badge/version-2018.R5-green.svg)](https://github.com/opencv/dldt/releases/tag/2018_R5)
[![Apache License Version 2.0](https://img.shields.io/badge/license-Apache_2.0-green.svg)](LICENSE)

%package bin
Summary: bin components for the dldt package.
Group: Binaries
Requires: dldt-license = %{version}-%{release}

%description bin
bin components for the dldt package.


%package dev
Summary: dev components for the dldt package.
Group: Development
Requires: dldt-lib = %{version}-%{release}
Requires: dldt-bin = %{version}-%{release}
Provides: dldt-devel = %{version}-%{release}
Requires: dldt = %{version}-%{release}

%description dev
dev components for the dldt package.


%package extras
Summary: extras components for the dldt package.
Group: Default

%description extras
extras components for the dldt package.


%package lib
Summary: lib components for the dldt package.
Group: Libraries
Requires: dldt-license = %{version}-%{release}

%description lib
lib components for the dldt package.


%package license
Summary: license components for the dldt package.
Group: Default

%description license
license components for the dldt package.


%prep
%setup -q -n dldt-2018_R5
%patch1 -p1
%patch2 -p1
%patch3 -p1
%patch4 -p1
%patch5 -p1
%patch6 -p1
%patch7 -p1
%patch8 -p1
%patch9 -p1
%patch10 -p1
%patch11 -p1
%patch12 -p1
%patch13 -p1
%patch14 -p1 -d inference-engine/thirdparty/clDNN
%patch15 -p1 -d inference-engine/thirdparty/clDNN
pushd ..
cp -a dldt-2018_R5 buildavx2
popd
pushd ..
cp -a dldt-2018_R5 buildavx512
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C
export SOURCE_DATE_EPOCH=1554828995
pushd inference-engine
mkdir -p clr-build
pushd clr-build
export CC=clang
export CXX=clang++
export LD=ld.gold
unset LDFLAGS
%cmake .. -DENABLE_CLDNN=1 \
-DENABLE_INTEL_OMP=0 \
-DENABLE_OPENCV=0 \
-DENABLE_SAMPLES_CORE=1 \
-DENABLE_PYTHON_BINDINGS=1 \
-DINSTALL_GMOCK=0 \
-DINSTALL_GTEST=0 \
-DBUILD_GMOCK=1 \
-DBUILD_GTEST=0 \
-DENABLE_PLUGIN_RPATH=0 \
-DENABLE_GNA=0 \
-DLLVM_LINK_LLVM_DYLIB=ON
make  %{?_smp_mflags} VERBOSE=1
popd
mkdir -p clr-build-avx2
pushd clr-build-avx2
export CC=clang
export CXX=clang++
export LD=ld.gold
unset LDFLAGS
export CFLAGS="$CFLAGS -O3 -march=haswell "
export FCFLAGS="$CFLAGS -O3 -march=haswell "
export FFLAGS="$CFLAGS -O3 -march=haswell "
export CXXFLAGS="$CXXFLAGS -O3 -march=haswell "
export CFLAGS="$CFLAGS -march=haswell -m64"
export CXXFLAGS="$CXXFLAGS -march=haswell -m64"
%cmake .. -DENABLE_CLDNN=1 \
-DENABLE_INTEL_OMP=0 \
-DENABLE_OPENCV=0 \
-DENABLE_SAMPLES_CORE=1 \
-DENABLE_PYTHON_BINDINGS=1 \
-DINSTALL_GMOCK=0 \
-DINSTALL_GTEST=0 \
-DBUILD_GMOCK=1 \
-DBUILD_GTEST=0 \
-DENABLE_PLUGIN_RPATH=0 \
-DENABLE_GNA=0 \
-DLLVM_LINK_LLVM_DYLIB=ON
make  %{?_smp_mflags} VERBOSE=1
popd
mkdir -p clr-build-avx512
pushd clr-build-avx512
export CC=clang
export CXX=clang++
export LD=ld.gold
unset LDFLAGS
export CFLAGS="$CFLAGS -O3 -march=skylake-avx512 "
export FCFLAGS="$CFLAGS -O3 -march=skylake-avx512 "
export FFLAGS="$CFLAGS -O3 -march=skylake-avx512 "
export CXXFLAGS="$CXXFLAGS -O3 -march=skylake-avx512 "
export CFLAGS="$CFLAGS -march=skylake-avx512 -m64 "
export CXXFLAGS="$CXXFLAGS -march=skylake-avx512 -m64 "
%cmake .. -DENABLE_CLDNN=1 \
-DENABLE_INTEL_OMP=0 \
-DENABLE_OPENCV=0 \
-DENABLE_SAMPLES_CORE=1 \
-DENABLE_PYTHON_BINDINGS=1 \
-DINSTALL_GMOCK=0 \
-DINSTALL_GTEST=0 \
-DBUILD_GMOCK=1 \
-DBUILD_GTEST=0 \
-DENABLE_PLUGIN_RPATH=0 \
-DENABLE_GNA=0 \
-DLLVM_LINK_LLVM_DYLIB=ON
make  %{?_smp_mflags} VERBOSE=1
popd
popd

%install
export SOURCE_DATE_EPOCH=1554828995
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/dldt
cp LICENSE %{buildroot}/usr/share/package-licenses/dldt/LICENSE
cp inference-engine/samples/thirdparty/gflags/COPYING.txt %{buildroot}/usr/share/package-licenses/dldt/inference-engine_samples_thirdparty_gflags_COPYING.txt
cp inference-engine/tests/libs/gtest/googlemock/LICENSE %{buildroot}/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googlemock_LICENSE
cp inference-engine/tests/libs/gtest/googlemock/scripts/generator/LICENSE %{buildroot}/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googlemock_scripts_generator_LICENSE
cp inference-engine/tests/libs/gtest/googletest/LICENSE %{buildroot}/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googletest_LICENSE
cp inference-engine/thirdparty/clDNN/common/googletest-fused/License.txt %{buildroot}/usr/share/package-licenses/dldt/inference-engine_thirdparty_clDNN_common_googletest-fused_License.txt
cp inference-engine/thirdparty/clDNN/common/khronos_ocl_clhpp/LICENSE.txt %{buildroot}/usr/share/package-licenses/dldt/inference-engine_thirdparty_clDNN_common_khronos_ocl_clhpp_LICENSE.txt
cp inference-engine/thirdparty/mkl-dnn/LICENSE %{buildroot}/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_LICENSE
cp inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/COPYRIGHT %{buildroot}/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_src_cpu_xbyak_COPYRIGHT
cp inference-engine/thirdparty/mkl-dnn/tests/gtests/gtest/LICENSE %{buildroot}/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_tests_gtests_gtest_LICENSE
pushd inference-engine
pushd clr-build-avx512
%make_install_avx512  || :
popd
pushd clr-build-avx2
%make_install_avx2  || :
popd
pushd clr-build
%make_install
popd
popd
## install_append content
mkdir -p %{buildroot}/usr/lib64
install -m 0755 inference-engine/clr-build/src/extension/libcpu_extension.so    %{buildroot}/usr/lib64
install -m 0755 inference-engine/clr-build/src/hetero_plugin/libHeteroPlugin.so %{buildroot}/usr/lib64
install -m 0755 inference-engine/clr-build/src/mkldnn_plugin/libMKLDNNPlugin.so %{buildroot}/usr/lib64
install -m 0755 inference-engine/clr-build/src/cldnn_engine/libclDNNPlugin.so %{buildroot}/usr/lib64
rm -f %{buildroot}/usr/lib64/libgflags_nothreads.so*
rm -f %{buildroot}/usr/lib64/libpugixml.so*
rm -f %{buildroot}/usr/lib64/haswell/libgflags_nothreads.so*
rm -f %{buildroot}/usr/lib64/haswell/libpugixml.so*
rm -f %{buildroot}/usr/lib64/haswell/avx512_1/libgflags_nothreads.so*
rm -f %{buildroot}/usr/lib64/haswell/avx512_1/libpugixml.so*
## install_append end

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
%exclude /usr/bin/classification_sample
%exclude /usr/bin/classification_sample_async
%exclude /usr/bin/haswell/avx512_1/classification_sample
%exclude /usr/bin/haswell/avx512_1/classification_sample_async
%exclude /usr/bin/haswell/avx512_1/hello_autoresize_classification
%exclude /usr/bin/haswell/avx512_1/hello_classification
%exclude /usr/bin/haswell/avx512_1/hello_request_classification
%exclude /usr/bin/haswell/avx512_1/object_detection_sample_ssd
%exclude /usr/bin/haswell/avx512_1/style_transfer_sample
%exclude /usr/bin/haswell/avx512_1/validation_app
%exclude /usr/bin/haswell/classification_sample
%exclude /usr/bin/haswell/classification_sample_async
%exclude /usr/bin/haswell/hello_autoresize_classification
%exclude /usr/bin/haswell/hello_classification
%exclude /usr/bin/haswell/hello_request_classification
%exclude /usr/bin/haswell/object_detection_sample_ssd
%exclude /usr/bin/haswell/style_transfer_sample
%exclude /usr/bin/haswell/validation_app
%exclude /usr/bin/hello_autoresize_classification
%exclude /usr/bin/hello_classification
%exclude /usr/bin/hello_request_classification
%exclude /usr/bin/object_detection_sample_ssd
%exclude /usr/bin/style_transfer_sample
%exclude /usr/bin/validation_app

%files dev
%defattr(-,root,root,-)
%exclude /usr/include/pugiconfig.hpp
%exclude /usr/include/pugixml.hpp
%exclude /usr/lib64/cmake/pugixml/pugixml-config.cmake
%exclude /usr/lib64/pkgconfig/gflags.pc
/usr/include/clDNN/C/activation.h
/usr/include/clDNN/C/activation_grad.h
/usr/include/clDNN/C/apply_adam.h
/usr/include/clDNN/C/arg_max_min.h
/usr/include/clDNN/C/average_unpooling.h
/usr/include/clDNN/C/batch_norm.h
/usr/include/clDNN/C/batch_norm_grad.h
/usr/include/clDNN/C/border.h
/usr/include/clDNN/C/broadcast.h
/usr/include/clDNN/C/cldnn.h
/usr/include/clDNN/C/concatenation.h
/usr/include/clDNN/C/convolution.h
/usr/include/clDNN/C/convolution_grad_input.h
/usr/include/clDNN/C/convolution_grad_weights.h
/usr/include/clDNN/C/crop.h
/usr/include/clDNN/C/custom_gpu_primitive.h
/usr/include/clDNN/C/data.h
/usr/include/clDNN/C/deconvolution.h
/usr/include/clDNN/C/detection_output.h
/usr/include/clDNN/C/eltwise.h
/usr/include/clDNN/C/embed.h
/usr/include/clDNN/C/fully_connected.h
/usr/include/clDNN/C/fully_connected_grad_input.h
/usr/include/clDNN/C/fully_connected_grad_weights.h
/usr/include/clDNN/C/gemm.h
/usr/include/clDNN/C/index_select.h
/usr/include/clDNN/C/input_layout.h
/usr/include/clDNN/C/lookup_table.h
/usr/include/clDNN/C/lrn.h
/usr/include/clDNN/C/lstm.h
/usr/include/clDNN/C/max_unpooling.h
/usr/include/clDNN/C/mutable_data.h
/usr/include/clDNN/C/mvn.h
/usr/include/clDNN/C/normalize.h
/usr/include/clDNN/C/permute.h
/usr/include/clDNN/C/pooling.h
/usr/include/clDNN/C/prior_box.h
/usr/include/clDNN/C/proposal.h
/usr/include/clDNN/C/region_yolo.h
/usr/include/clDNN/C/reorder.h
/usr/include/clDNN/C/reorg_yolo.h
/usr/include/clDNN/C/reshape.h
/usr/include/clDNN/C/roi_pooling.h
/usr/include/clDNN/C/scale.h
/usr/include/clDNN/C/scale_grad_input.h
/usr/include/clDNN/C/scale_grad_weights.h
/usr/include/clDNN/C/select.h
/usr/include/clDNN/C/softmax.h
/usr/include/clDNN/C/softmax_loss_grad.h
/usr/include/clDNN/C/split.h
/usr/include/clDNN/C/tile.h
/usr/include/clDNN/C/upsampling.h
/usr/include/clDNN/CPP/activation.hpp
/usr/include/clDNN/CPP/activation_grad.hpp
/usr/include/clDNN/CPP/apply_adam.hpp
/usr/include/clDNN/CPP/arg_max_min.hpp
/usr/include/clDNN/CPP/average_unpooling.hpp
/usr/include/clDNN/CPP/batch_norm.hpp
/usr/include/clDNN/CPP/batch_norm_grad.hpp
/usr/include/clDNN/CPP/border.hpp
/usr/include/clDNN/CPP/broadcast.hpp
/usr/include/clDNN/CPP/cldnn_defs.h
/usr/include/clDNN/CPP/compounds.h
/usr/include/clDNN/CPP/concatenation.hpp
/usr/include/clDNN/CPP/convolution.hpp
/usr/include/clDNN/CPP/convolution_grad_input.hpp
/usr/include/clDNN/CPP/convolution_grad_weights.hpp
/usr/include/clDNN/CPP/crop.hpp
/usr/include/clDNN/CPP/custom_gpu_primitive.hpp
/usr/include/clDNN/CPP/data.hpp
/usr/include/clDNN/CPP/deconvolution.hpp
/usr/include/clDNN/CPP/detection_output.hpp
/usr/include/clDNN/CPP/eltwise.hpp
/usr/include/clDNN/CPP/embed.hpp
/usr/include/clDNN/CPP/engine.hpp
/usr/include/clDNN/CPP/event.hpp
/usr/include/clDNN/CPP/fully_connected.hpp
/usr/include/clDNN/CPP/fully_connected_grad_input.hpp
/usr/include/clDNN/CPP/fully_connected_grad_weights.hpp
/usr/include/clDNN/CPP/gemm.hpp
/usr/include/clDNN/CPP/index_select.hpp
/usr/include/clDNN/CPP/input_layout.hpp
/usr/include/clDNN/CPP/layout.hpp
/usr/include/clDNN/CPP/lookup_table.hpp
/usr/include/clDNN/CPP/lrn.hpp
/usr/include/clDNN/CPP/lstm.hpp
/usr/include/clDNN/CPP/max_unpooling.hpp
/usr/include/clDNN/CPP/memory.hpp
/usr/include/clDNN/CPP/meta_utils.hpp
/usr/include/clDNN/CPP/mutable_data.hpp
/usr/include/clDNN/CPP/mvn.hpp
/usr/include/clDNN/CPP/network.hpp
/usr/include/clDNN/CPP/normalize.hpp
/usr/include/clDNN/CPP/permute.hpp
/usr/include/clDNN/CPP/pooling.hpp
/usr/include/clDNN/CPP/primitive.hpp
/usr/include/clDNN/CPP/prior_box.hpp
/usr/include/clDNN/CPP/profiling.hpp
/usr/include/clDNN/CPP/program.hpp
/usr/include/clDNN/CPP/proposal.hpp
/usr/include/clDNN/CPP/region_yolo.hpp
/usr/include/clDNN/CPP/reorder.hpp
/usr/include/clDNN/CPP/reorg_yolo.hpp
/usr/include/clDNN/CPP/reshape.hpp
/usr/include/clDNN/CPP/roi_pooling.hpp
/usr/include/clDNN/CPP/scale.hpp
/usr/include/clDNN/CPP/scale_grad_input.hpp
/usr/include/clDNN/CPP/scale_grad_weights.hpp
/usr/include/clDNN/CPP/select.hpp
/usr/include/clDNN/CPP/softmax.hpp
/usr/include/clDNN/CPP/softmax_loss_grad.hpp
/usr/include/clDNN/CPP/split.hpp
/usr/include/clDNN/CPP/tensor.hpp
/usr/include/clDNN/CPP/tile.hpp
/usr/include/clDNN/CPP/topology.hpp
/usr/include/clDNN/CPP/upsampling.hpp
/usr/include/inference_engine/builders/ie_argmax_layer.hpp
/usr/include/inference_engine/builders/ie_batch_normalization_layer.hpp
/usr/include/inference_engine/builders/ie_clamp_layer.hpp
/usr/include/inference_engine/builders/ie_concat_layer.hpp
/usr/include/inference_engine/builders/ie_const_layer.hpp
/usr/include/inference_engine/builders/ie_convolution_layer.hpp
/usr/include/inference_engine/builders/ie_crop_layer.hpp
/usr/include/inference_engine/builders/ie_ctc_greedy_decoder_layer.hpp
/usr/include/inference_engine/builders/ie_deconvolution_layer.hpp
/usr/include/inference_engine/builders/ie_detection_output_layer.hpp
/usr/include/inference_engine/builders/ie_eltwise_layer.hpp
/usr/include/inference_engine/builders/ie_elu_layer.hpp
/usr/include/inference_engine/builders/ie_fully_connected_layer.hpp
/usr/include/inference_engine/builders/ie_grn_layer.hpp
/usr/include/inference_engine/builders/ie_input_layer.hpp
/usr/include/inference_engine/builders/ie_layer_builder.hpp
/usr/include/inference_engine/builders/ie_layer_fragment.hpp
/usr/include/inference_engine/builders/ie_memory_layer.hpp
/usr/include/inference_engine/builders/ie_mvn_layer.hpp
/usr/include/inference_engine/builders/ie_network_builder.hpp
/usr/include/inference_engine/builders/ie_norm_layer.hpp
/usr/include/inference_engine/builders/ie_normalize_layer.hpp
/usr/include/inference_engine/builders/ie_output_layer.hpp
/usr/include/inference_engine/builders/ie_permute_layer.hpp
/usr/include/inference_engine/builders/ie_pooling_layer.hpp
/usr/include/inference_engine/builders/ie_power_layer.hpp
/usr/include/inference_engine/builders/ie_prelu_layer.hpp
/usr/include/inference_engine/builders/ie_prior_box_clustered_layer.hpp
/usr/include/inference_engine/builders/ie_prior_box_layer.hpp
/usr/include/inference_engine/builders/ie_proposal_layer.hpp
/usr/include/inference_engine/builders/ie_psroi_pooling_layer.hpp
/usr/include/inference_engine/builders/ie_region_yolo_layer.hpp
/usr/include/inference_engine/builders/ie_relu6_layer.hpp
/usr/include/inference_engine/builders/ie_relu_layer.hpp
/usr/include/inference_engine/builders/ie_reorg_yolo_layer.hpp
/usr/include/inference_engine/builders/ie_reshape_layer.hpp
/usr/include/inference_engine/builders/ie_roi_pooling_layer.hpp
/usr/include/inference_engine/builders/ie_scale_shift_layer.hpp
/usr/include/inference_engine/builders/ie_sigmoid_layer.hpp
/usr/include/inference_engine/builders/ie_simpler_nms_layer.hpp
/usr/include/inference_engine/builders/ie_softmax_layer.hpp
/usr/include/inference_engine/builders/ie_split_layer.hpp
/usr/include/inference_engine/builders/ie_tanh_layer.hpp
/usr/include/inference_engine/builders/ie_tile_layer.hpp
/usr/include/inference_engine/cldnn/cldnn_config.hpp
/usr/include/inference_engine/cpp/ie_cnn_net_reader.h
/usr/include/inference_engine/cpp/ie_cnn_network.h
/usr/include/inference_engine/cpp/ie_executable_network.hpp
/usr/include/inference_engine/cpp/ie_infer_request.hpp
/usr/include/inference_engine/cpp/ie_memory_state.hpp
/usr/include/inference_engine/cpp/ie_plugin_cpp.hpp
/usr/include/inference_engine/details/caseless.hpp
/usr/include/inference_engine/details/ie_blob_iterator.hpp
/usr/include/inference_engine/details/ie_cnn_network_iterator.hpp
/usr/include/inference_engine/details/ie_cnn_network_tools.h
/usr/include/inference_engine/details/ie_exception.hpp
/usr/include/inference_engine/details/ie_exception_conversion.hpp
/usr/include/inference_engine/details/ie_inetwork_iterator.hpp
/usr/include/inference_engine/details/ie_irelease.hpp
/usr/include/inference_engine/details/ie_no_copy.hpp
/usr/include/inference_engine/details/ie_no_release.hpp
/usr/include/inference_engine/details/ie_pre_allocator.hpp
/usr/include/inference_engine/details/ie_so_loader.h
/usr/include/inference_engine/details/ie_so_pointer.hpp
/usr/include/inference_engine/details/os/lin_shared_object_loader.h
/usr/include/inference_engine/details/os/win_shared_object_loader.h
/usr/include/inference_engine/gna/gna_config.hpp
/usr/include/inference_engine/hetero/hetero_plugin_config.hpp
/usr/include/inference_engine/ie_allocator.hpp
/usr/include/inference_engine/ie_api.h
/usr/include/inference_engine/ie_blob.h
/usr/include/inference_engine/ie_builders.hpp
/usr/include/inference_engine/ie_common.h
/usr/include/inference_engine/ie_context.hpp
/usr/include/inference_engine/ie_data.h
/usr/include/inference_engine/ie_device.hpp
/usr/include/inference_engine/ie_error.hpp
/usr/include/inference_engine/ie_extension.h
/usr/include/inference_engine/ie_icnn_net_reader.h
/usr/include/inference_engine/ie_icnn_network.hpp
/usr/include/inference_engine/ie_icnn_network_stats.hpp
/usr/include/inference_engine/ie_iexecutable_network.hpp
/usr/include/inference_engine/ie_iextension.h
/usr/include/inference_engine/ie_ihetero_plugin.hpp
/usr/include/inference_engine/ie_iinfer_request.hpp
/usr/include/inference_engine/ie_imemory_state.hpp
/usr/include/inference_engine/ie_inetwork.hpp
/usr/include/inference_engine/ie_input_info.hpp
/usr/include/inference_engine/ie_layers.h
/usr/include/inference_engine/ie_layers_property.hpp
/usr/include/inference_engine/ie_layouts.h
/usr/include/inference_engine/ie_locked_memory.hpp
/usr/include/inference_engine/ie_parallel.hpp
/usr/include/inference_engine/ie_parameter.hpp
/usr/include/inference_engine/ie_plugin.hpp
/usr/include/inference_engine/ie_plugin_config.hpp
/usr/include/inference_engine/ie_plugin_dispatcher.hpp
/usr/include/inference_engine/ie_plugin_ptr.hpp
/usr/include/inference_engine/ie_precision.hpp
/usr/include/inference_engine/ie_preprocess.hpp
/usr/include/inference_engine/ie_primitive_info.hpp
/usr/include/inference_engine/ie_tensor_info.hpp
/usr/include/inference_engine/ie_unicode.hpp
/usr/include/inference_engine/ie_utils.hpp
/usr/include/inference_engine/ie_version.hpp
/usr/include/inference_engine/inference_engine.hpp
/usr/lib64/cmake/InferenceEngine/InferenceEngineConfig-version.cmake
/usr/lib64/cmake/InferenceEngine/InferenceEngineConfig.cmake
/usr/lib64/cmake/InferenceEngine/targets-debug.cmake
/usr/lib64/cmake/InferenceEngine/targets.cmake
/usr/lib64/cmake/pugixml/pugixml-config-debug.cmake

%files extras
%defattr(-,root,root,-)
/usr/bin/classification_sample
/usr/bin/classification_sample_async
/usr/bin/haswell/avx512_1/classification_sample
/usr/bin/haswell/avx512_1/classification_sample_async
/usr/bin/haswell/avx512_1/hello_autoresize_classification
/usr/bin/haswell/avx512_1/hello_classification
/usr/bin/haswell/avx512_1/hello_request_classification
/usr/bin/haswell/avx512_1/object_detection_sample_ssd
/usr/bin/haswell/avx512_1/style_transfer_sample
/usr/bin/haswell/avx512_1/validation_app
/usr/bin/haswell/classification_sample
/usr/bin/haswell/classification_sample_async
/usr/bin/haswell/hello_autoresize_classification
/usr/bin/haswell/hello_classification
/usr/bin/haswell/hello_request_classification
/usr/bin/haswell/object_detection_sample_ssd
/usr/bin/haswell/style_transfer_sample
/usr/bin/haswell/validation_app
/usr/bin/hello_autoresize_classification
/usr/bin/hello_classification
/usr/bin/hello_request_classification
/usr/bin/object_detection_sample_ssd
/usr/bin/style_transfer_sample
/usr/bin/validation_app

%files lib
%defattr(-,root,root,-)
/usr/lib64/haswell/avx512_1/libinference_engine.so
/usr/lib64/haswell/avx512_1/libinference_engine.so.1
/usr/lib64/haswell/libclDNN64.so
/usr/lib64/haswell/libinference_engine.so
/usr/lib64/haswell/libinference_engine.so.1
/usr/lib64/libHeteroPlugin.so
/usr/lib64/libMKLDNNPlugin.so
/usr/lib64/libclDNN64.so
/usr/lib64/libclDNNPlugin.so
/usr/lib64/libcpu_extension.so
/usr/lib64/libinference_engine.so
/usr/lib64/libinference_engine.so.1

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/dldt/LICENSE
/usr/share/package-licenses/dldt/inference-engine_samples_thirdparty_gflags_COPYING.txt
/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googlemock_LICENSE
/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googlemock_scripts_generator_LICENSE
/usr/share/package-licenses/dldt/inference-engine_tests_libs_gtest_googletest_LICENSE
/usr/share/package-licenses/dldt/inference-engine_thirdparty_clDNN_common_googletest-fused_License.txt
/usr/share/package-licenses/dldt/inference-engine_thirdparty_clDNN_common_khronos_ocl_clhpp_LICENSE.txt
/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_LICENSE
/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_src_cpu_xbyak_COPYRIGHT
/usr/share/package-licenses/dldt/inference-engine_thirdparty_mkl-dnn_tests_gtests_gtest_LICENSE
